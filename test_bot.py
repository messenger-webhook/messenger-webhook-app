import os
import requests
from bs4 import BeautifulSoup
from dotenv import load_dotenv

# Charger les identifiants depuis le fichier .env
load_dotenv()
KUKU_USER = os.getenv("KUKU_USER")
KUKU_PASS = os.getenv("KUKU_PASS")

# URLs Kuku (connexion + bo√Æte de r√©ception FR)
LOGIN_URL = "https://m.kuku.lu/fr.php"
INBOX_URL = "https://m.kuku.lu/recv.php"

# Cr√©er une session persistante
session = requests.Session()

def login_kuku():
    print(f"üîê Tentative de connexion avec {KUKU_USER} ...")
    payload = {
        "si": KUKU_USER,   # champ pseudo (si = screen id)
        "pw": KUKU_PASS,   # mot de passe
        "submit": "Login"
    }

    res = session.post(LOGIN_URL, data=payload)
    print(f"üì° Code HTTP: {res.status_code}")

    if "Bo√Æte de r√©ception" in res.text or "recv.php" in res.url:
        print("‚úÖ Connexion r√©ussie !")
        return True
    else:
        print("‚ùå Connexion √©chou√©e, identifiants probablement incorrects")
        return False

def fetch_inbox():
    print("üì• R√©cup√©ration des mails ...")
    res = session.get(INBOX_URL)
    print(f"üì° Inbox status: {res.status_code}")

    # Sauvegarder HTML complet pour analyse
    with open("inbox.html", "w", encoding="utf-8") as f:
        f.write(res.text)
    print("‚úÖ inbox.html sauvegard√© (ouvre-le dans ton navigateur)")

    # Petit aper√ßu console
    soup = BeautifulSoup(res.text, "html.parser")
    mails = soup.find_all("div")
    print(f"üì© Nombre d‚Äô√©l√©ments <div> trouv√©s : {len(mails)}")
    print("--- Aper√ßu brut du texte ---")
    print(soup.get_text()[:500])  # seulement les 500 premiers caract√®res

if __name__ == "__main__":
    if login_kuku():
        fetch_inbox()
